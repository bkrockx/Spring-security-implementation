<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
 
 	<!--  
	<http auto-config="true">
			<intercept-url pattern="/admin**" access="ROLE_ADMIN" />
	  	<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />  
		<intercept-url pattern="/admin**" access="ROLE_ADMIN" />
	  		<intercept-url pattern="/dba**" access="ROLE_DBA" />   
	 	<logout logout-success-url="/index"/> 
	</http>
	-->
	
	<http auto-config="true" use-expressions="true">
 
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
 
 		<logout logout-success-url="/index"/>
 		<access-denied-handler error-page="/error1" />
		<form-login 
		    login-page="/login" 
		    default-target-url="/index" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login?logout"  />
		<!-- enable csrf protection -->
		<csrf/>
	</http>
	
	<authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username,password, enabled from users where username=?"
		  authorities-by-username-query=
		    "select username, role from user_roles where username =?  " />
	  </authentication-provider>
	</authentication-manager>
 
 	<!--  
	<authentication-manager>
	  <authentication-provider>
	    <user-service>
		<user name="aa" password="aa" authorities="ROLE_USER" />
		<user name="bb" password="bb" authorities="ROLE_ADMIN" />
		<user name="cc" password="cc" authorities="ROLE_DBA" />
	    </user-service>
	  </authentication-provider>
	</authentication-manager>
	
	-->
 
</beans:beans>